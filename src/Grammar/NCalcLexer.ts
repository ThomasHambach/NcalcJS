// Generated from src/Grammar/NCalc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class NCalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly NOT = 29;
	public static readonly TRUE = 30;
	public static readonly FALSE = 31;
	public static readonly AND = 32;
	public static readonly OR = 33;
	public static readonly ID = 34;
	public static readonly FLOAT = 35;
	public static readonly INTEGER = 36;
	public static readonly STRING = 37;
	public static readonly DATETIME = 38;
	public static readonly NAME = 39;
	public static readonly EXPONENT = 40;
	public static readonly WS = 41;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "NOT", "TRUE", "FALSE", "AND", "OR", "ID", 
		"FLOAT", "INTEGER", "STRING", "DATETIME", "NAME", "EXPONENT", "LETTER", 
		"EscapeSequence", "UnicodeEscape", "HexDigit", "DIGIT", "WS", "A", "B", 
		"C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", 
		"Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'?'", "':'", "'&&'", "'||'", "'&'", "'|'", "'^'", "'=='", 
		"'='", "'!='", "'<>'", "'<'", "'<='", "'>'", "'>='", "'<<'", "'>>'", "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'!'", "'~'", "'**'", "'('", "')'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "NOT", "TRUE", "FALSE", "AND", "OR", "ID", "FLOAT", "INTEGER", 
		"STRING", "DATETIME", "NAME", "EXPONENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(NCalcLexer._LITERAL_NAMES, NCalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return NCalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(NCalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "NCalc.g4"; }

	// @Override
	public get ruleNames(): string[] { return NCalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return NCalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return NCalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return NCalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02+\u0193\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C" +
		"\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!" +
		"\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03#\x07#\xEF\n#\f#\x0E#\xF2\v#\x03" +
		"$\x07$\xF5\n$\f$\x0E$\xF8\v$\x03$\x03$\x06$\xFC\n$\r$\x0E$\xFD\x03$\x05" +
		"$\u0101\n$\x03$\x06$\u0104\n$\r$\x0E$\u0105\x03$\x03$\x07$\u010A\n$\f" +
		"$\x0E$\u010D\v$\x03$\x05$\u0110\n$\x03$\x06$\u0113\n$\r$\x0E$\u0114\x03" +
		"$\x03$\x05$\u0119\n$\x03%\x06%\u011C\n%\r%\x0E%\u011D\x03&\x03&\x03&\x07" +
		"&\u0123\n&\f&\x0E&\u0126\v&\x03&\x03&\x03\'\x03\'\x07\'\u012C\n\'\f\'" +
		"\x0E\'\u012F\v\'\x03\'\x03\'\x03(\x03(\x03(\x07(\u0136\n(\f(\x0E(\u0139" +
		"\v(\x03(\x03(\x03)\x03)\x05)\u013F\n)\x03)\x06)\u0142\n)\r)\x0E)\u0143" +
		"\x03*\x03*\x03+\x03+\x03+\x05+\u014B\n+\x03,\x03,\x03,\x03,\x03,\x03," +
		"\x03-\x03-\x05-\u0155\n-\x03.\x03.\x03/\x06/\u015A\n/\r/\x0E/\u015B\x03" +
		"/\x03/\x030\x030\x031\x031\x032\x032\x033\x033\x034\x034\x035\x035\x03" +
		"6\x036\x037\x037\x038\x038\x039\x039\x03:\x03:\x03;\x03;\x03<\x03<\x03" +
		"=\x03=\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03" +
		"D\x03D\x03E\x03E\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x03I\x05\u0124\u012D" +
		"\u0137\x02\x02J\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02" +
		"\'M\x02(O\x02)Q\x02*S\x02\x02U\x02\x02W\x02\x02Y\x02\x02[\x02\x02]\x02" +
		"+_\x02\x02a\x02\x02c\x02\x02e\x02\x02g\x02\x02i\x02\x02k\x02\x02m\x02" +
		"\x02o\x02\x02q\x02\x02s\x02\x02u\x02\x02w\x02\x02y\x02\x02{\x02\x02}\x02" +
		"\x02\x7F\x02\x02\x81\x02\x02\x83\x02\x02\x85\x02\x02\x87\x02\x02\x89\x02" +
		"\x02\x8B\x02\x02\x8D\x02\x02\x8F\x02\x02\x91\x02\x02\x03\x02#\x05\x02" +
		"\x02!))^^\x04\x02]]__\x04\x02GGgg\x04\x02--//\x05\x02C\\aac|\x07\x02)" +
		")^^ppttvv\x04\x02CHch\x05\x02\v\f\x0E\x0F\"\"\x04\x02CCcc\x04\x02DDdd" +
		"\x04\x02EEee\x04\x02FFff\x04\x02HHhh\x04\x02IIii\x04\x02JJjj\x04\x02K" +
		"Kkk\x04\x02LLll\x04\x02MMmm\x04\x02NNnn\x04\x02OOoo\x04\x02PPpp\x04\x02" +
		"QQqq\x04\x02RRrr\x04\x02SSss\x04\x02TTtt\x04\x02UUuu\x04\x02VVvv\x04\x02" +
		"WWww\x04\x02XXxx\x04\x02YYyy\x04\x02ZZzz\x04\x02[[{{\x04\x02\\\\||\x02" +
		"\u0189\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02" +
		"\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02" +
		"\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02" +
		"\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02" +
		"\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02" +
		";\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02" +
		"\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02" +
		"\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03" +
		"\x02\x02\x02\x02Q\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x03\x93\x03\x02" +
		"\x02\x02\x05\x95\x03\x02\x02\x02\x07\x97\x03\x02\x02\x02\t\x9A\x03\x02" +
		"\x02\x02\v\x9D\x03\x02\x02\x02\r\x9F\x03\x02\x02\x02\x0F\xA1\x03\x02\x02" +
		"\x02\x11\xA3\x03\x02\x02\x02\x13\xA6\x03\x02\x02\x02\x15\xA8\x03\x02\x02" +
		"\x02\x17\xAB\x03\x02\x02\x02\x19\xAE\x03\x02\x02\x02\x1B\xB0\x03\x02\x02" +
		"\x02\x1D\xB3\x03\x02\x02\x02\x1F\xB5\x03\x02\x02\x02!\xB8\x03\x02\x02" +
		"\x02#\xBB\x03\x02\x02\x02%\xBE\x03\x02\x02\x02\'\xC0\x03\x02\x02\x02)" +
		"\xC2\x03\x02\x02\x02+\xC4\x03\x02\x02\x02-\xC6\x03\x02\x02\x02/\xC8\x03" +
		"\x02\x02\x021\xCA\x03\x02\x02\x023\xCC\x03\x02\x02\x025\xCF\x03\x02\x02" +
		"\x027\xD1\x03\x02\x02\x029\xD3\x03\x02\x02\x02;\xD5\x03\x02\x02\x02=\xD9" +
		"\x03\x02\x02\x02?\xDE\x03\x02\x02\x02A\xE4\x03\x02\x02\x02C\xE8\x03\x02" +
		"\x02\x02E\xEB\x03\x02\x02\x02G\u0118\x03\x02\x02\x02I\u011B\x03\x02\x02" +
		"\x02K\u011F\x03\x02\x02\x02M\u0129\x03\x02\x02\x02O\u0132\x03\x02\x02" +
		"\x02Q\u013C\x03\x02\x02\x02S\u0145\x03\x02\x02\x02U\u0147\x03\x02\x02" +
		"\x02W\u014C\x03\x02\x02\x02Y\u0154\x03\x02\x02\x02[\u0156\x03\x02\x02" +
		"\x02]\u0159\x03\x02\x02\x02_\u015F\x03\x02\x02\x02a\u0161\x03\x02\x02" +
		"\x02c\u0163\x03\x02\x02\x02e\u0165\x03\x02\x02\x02g\u0167\x03\x02\x02" +
		"\x02i\u0169\x03\x02\x02\x02k\u016B\x03\x02\x02\x02m\u016D\x03\x02\x02" +
		"\x02o\u016F\x03\x02\x02\x02q\u0171\x03\x02\x02\x02s\u0173\x03\x02\x02" +
		"\x02u\u0175\x03\x02\x02\x02w\u0177\x03\x02\x02\x02y\u0179\x03\x02\x02" +
		"\x02{\u017B\x03\x02\x02\x02}\u017D\x03\x02\x02\x02\x7F\u017F\x03\x02\x02" +
		"\x02\x81\u0181\x03\x02\x02\x02\x83\u0183\x03\x02\x02\x02\x85\u0185\x03" +
		"\x02\x02\x02\x87\u0187\x03\x02\x02\x02\x89\u0189\x03\x02\x02\x02\x8B\u018B" +
		"\x03\x02\x02\x02\x8D\u018D\x03\x02\x02\x02\x8F\u018F\x03\x02\x02\x02\x91" +
		"\u0191\x03\x02\x02\x02\x93\x94\x07A\x02\x02\x94\x04\x03\x02\x02\x02\x95" +
		"\x96\x07<\x02\x02\x96\x06\x03\x02\x02\x02\x97\x98\x07(\x02\x02\x98\x99" +
		"\x07(\x02\x02\x99\b\x03\x02\x02\x02\x9A\x9B\x07~\x02\x02\x9B\x9C\x07~" +
		"\x02\x02\x9C\n\x03\x02\x02\x02\x9D\x9E\x07(\x02\x02\x9E\f\x03\x02\x02" +
		"\x02\x9F\xA0\x07~\x02\x02\xA0\x0E\x03\x02\x02\x02\xA1\xA2\x07`\x02\x02" +
		"\xA2\x10\x03\x02\x02\x02\xA3\xA4\x07?\x02\x02\xA4\xA5\x07?\x02\x02\xA5" +
		"\x12\x03\x02\x02\x02\xA6\xA7\x07?\x02\x02\xA7\x14\x03\x02\x02\x02\xA8" +
		"\xA9\x07#\x02\x02\xA9\xAA\x07?\x02\x02\xAA\x16\x03\x02\x02\x02\xAB\xAC" +
		"\x07>\x02\x02\xAC\xAD\x07@\x02\x02\xAD\x18\x03\x02\x02\x02\xAE\xAF\x07" +
		">\x02\x02\xAF\x1A\x03\x02\x02\x02\xB0\xB1\x07>\x02\x02\xB1\xB2\x07?\x02" +
		"\x02\xB2\x1C\x03\x02\x02\x02\xB3\xB4\x07@\x02\x02\xB4\x1E\x03\x02\x02" +
		"\x02\xB5\xB6\x07@\x02\x02\xB6\xB7\x07?\x02\x02\xB7 \x03\x02\x02\x02\xB8" +
		"\xB9\x07>\x02\x02\xB9\xBA\x07>\x02\x02\xBA\"\x03\x02\x02\x02\xBB\xBC\x07" +
		"@\x02\x02\xBC\xBD\x07@\x02\x02\xBD$\x03\x02\x02\x02\xBE\xBF\x07-\x02\x02" +
		"\xBF&\x03\x02\x02\x02\xC0\xC1\x07/\x02\x02\xC1(\x03\x02\x02\x02\xC2\xC3" +
		"\x07,\x02\x02\xC3*\x03\x02\x02\x02\xC4\xC5\x071\x02\x02\xC5,\x03\x02\x02" +
		"\x02\xC6\xC7\x07\'\x02\x02\xC7.\x03\x02\x02\x02\xC8\xC9\x07#\x02\x02\xC9" +
		"0\x03\x02\x02\x02\xCA\xCB\x07\x80\x02\x02\xCB2\x03\x02\x02\x02\xCC\xCD" +
		"\x07,\x02\x02\xCD\xCE\x07,\x02\x02\xCE4\x03\x02\x02\x02\xCF\xD0\x07*\x02" +
		"\x02\xD06\x03\x02\x02\x02\xD1\xD2\x07+\x02\x02\xD28\x03\x02\x02\x02\xD3" +
		"\xD4\x07.\x02\x02\xD4:\x03\x02\x02\x02\xD5\xD6\x05y=\x02\xD6\xD7\x05{" +
		">\x02\xD7\xD8\x05\x85C\x02\xD8<\x03\x02\x02\x02\xD9\xDA\x05\x85C\x02\xDA" +
		"\xDB\x05\x81A\x02\xDB\xDC\x05\x87D\x02\xDC\xDD\x05g4\x02\xDD>\x03\x02" +
		"\x02\x02\xDE\xDF\x05i5\x02\xDF\xE0\x05_0\x02\xE0\xE1\x05u;\x02\xE1\xE2" +
		"\x05\x83B\x02\xE2\xE3\x05g4\x02\xE3@\x03\x02\x02\x02\xE4\xE5\x05_0\x02" +
		"\xE5\xE6\x05y=\x02\xE6\xE7\x05e3\x02\xE7B\x03\x02\x02\x02\xE8\xE9\x05" +
		"{>\x02\xE9\xEA\x05\x81A\x02\xEAD\x03\x02\x02\x02\xEB\xF0\x05S*\x02\xEC" +
		"\xEF\x05S*\x02\xED\xEF\x05[.\x02\xEE\xEC\x03\x02\x02\x02\xEE\xED\x03\x02" +
		"\x02\x02\xEF\xF2\x03\x02\x02\x02\xF0\xEE\x03\x02\x02\x02\xF0\xF1\x03\x02" +
		"\x02\x02\xF1F\x03\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF3\xF5\x05[.\x02" +
		"\xF4\xF3\x03\x02\x02\x02\xF5\xF8\x03\x02\x02\x02\xF6\xF4\x03\x02\x02\x02" +
		"\xF6\xF7\x03\x02\x02\x02\xF7\xF9\x03\x02\x02\x02\xF8\xF6\x03\x02\x02\x02" +
		"\xF9\xFB\x070\x02\x02\xFA\xFC\x05[.\x02\xFB\xFA\x03\x02\x02\x02\xFC\xFD" +
		"\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02\xFE\u0100" +
		"\x03\x02\x02\x02\xFF\u0101\x05Q)\x02\u0100\xFF\x03\x02\x02\x02\u0100\u0101" +
		"\x03\x02\x02\x02\u0101\u0119\x03\x02\x02\x02\u0102\u0104\x05[.\x02\u0103" +
		"\u0102\x03\x02\x02\x02\u0104\u0105\x03\x02\x02\x02\u0105\u0103\x03\x02" +
		"\x02\x02\u0105\u0106\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107" +
		"\u010B\x070\x02\x02\u0108\u010A\x05[.\x02\u0109\u0108\x03\x02\x02\x02" +
		"\u010A\u010D\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03" +
		"\x02\x02\x02\u010C\u010F\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E" +
		"\u0110\x05Q)\x02\u010F\u010E\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02" +
		"\u0110\u0119\x03\x02\x02\x02\u0111\u0113\x05[.\x02\u0112\u0111\x03\x02" +
		"\x02\x02\u0113\u0114\x03\x02\x02\x02\u0114\u0112\x03\x02\x02\x02\u0114" +
		"\u0115\x03\x02\x02\x02\u0115\u0116\x03\x02\x02\x02\u0116\u0117\x05Q)\x02" +
		"\u0117\u0119\x03\x02\x02\x02\u0118\xF6\x03\x02\x02\x02\u0118\u0103\x03" +
		"\x02\x02\x02\u0118\u0112\x03\x02\x02\x02\u0119H\x03\x02\x02\x02\u011A" +
		"\u011C\x05[.\x02\u011B\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02" +
		"\u011D\u011B\x03\x02\x02\x02\u011D\u011E\x03\x02\x02\x02\u011EJ\x03\x02" +
		"\x02\x02\u011F\u0124\x07)\x02\x02\u0120\u0123\x05U+\x02\u0121\u0123\n" +
		"\x02\x02\x02\u0122\u0120\x03\x02\x02\x02\u0122\u0121\x03\x02\x02\x02\u0123" +
		"\u0126\x03\x02\x02\x02\u0124\u0125\x03\x02\x02\x02\u0124\u0122\x03\x02" +
		"\x02\x02\u0125\u0127\x03\x02\x02\x02\u0126\u0124\x03\x02\x02\x02\u0127" +
		"\u0128\x07)\x02\x02\u0128L\x03\x02\x02\x02\u0129\u012D\x07%\x02\x02\u012A" +
		"\u012C\v\x02\x02\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012F\x03\x02\x02" +
		"\x02\u012D\u012E\x03\x02\x02\x02\u012D\u012B\x03\x02\x02\x02\u012E\u0130" +
		"\x03\x02\x02\x02\u012F\u012D\x03\x02\x02\x02\u0130\u0131\x07%\x02\x02" +
		"\u0131N\x03\x02\x02\x02\u0132\u0137\x07]\x02\x02\u0133\u0136\n\x03\x02" +
		"\x02\u0134\u0136\x05O(\x02\u0135\u0133\x03\x02\x02\x02\u0135\u0134\x03" +
		"\x02\x02\x02\u0136\u0139\x03\x02\x02\x02\u0137\u0138\x03\x02\x02\x02\u0137" +
		"\u0135\x03\x02\x02\x02\u0138\u013A\x03\x02\x02\x02\u0139\u0137\x03\x02" +
		"\x02\x02\u013A\u013B\x07_\x02\x02\u013BP\x03\x02\x02\x02\u013C\u013E\t" +
		"\x04\x02\x02\u013D\u013F\t\x05\x02\x02\u013E\u013D\x03\x02\x02\x02\u013E" +
		"\u013F\x03\x02\x02\x02\u013F\u0141\x03\x02\x02\x02\u0140\u0142\x05[.\x02" +
		"\u0141\u0140\x03\x02\x02\x02\u0142\u0143\x03\x02\x02\x02\u0143\u0141\x03" +
		"\x02\x02\x02\u0143\u0144\x03\x02\x02\x02\u0144R\x03\x02\x02\x02\u0145" +
		"\u0146\t\x06\x02\x02\u0146T\x03\x02\x02\x02\u0147\u014A\x07^\x02\x02\u0148" +
		"\u014B\t\x07\x02\x02\u0149\u014B\x05W,\x02\u014A\u0148\x03\x02\x02\x02" +
		"\u014A\u0149\x03\x02\x02\x02\u014BV\x03\x02\x02\x02\u014C\u014D\x07w\x02" +
		"\x02\u014D\u014E\x05Y-\x02\u014E\u014F\x05Y-\x02\u014F\u0150\x05Y-\x02" +
		"\u0150\u0151\x05Y-\x02\u0151X\x03\x02\x02\x02\u0152\u0155\x05[.\x02\u0153" +
		"\u0155\t\b\x02\x02\u0154\u0152\x03\x02\x02\x02\u0154\u0153\x03\x02\x02" +
		"\x02\u0155Z\x03\x02\x02\x02\u0156\u0157\x042;\x02\u0157\\\x03\x02\x02" +
		"\x02\u0158\u015A\t\t\x02\x02\u0159\u0158\x03\x02\x02\x02\u015A\u015B\x03" +
		"\x02\x02\x02\u015B\u0159\x03\x02\x02\x02\u015B\u015C\x03\x02\x02\x02\u015C" +
		"\u015D\x03\x02\x02\x02\u015D\u015E\b/\x02\x02\u015E^\x03\x02\x02\x02\u015F" +
		"\u0160\t\n\x02\x02\u0160`\x03\x02\x02\x02\u0161\u0162\t\v\x02\x02\u0162" +
		"b\x03\x02\x02\x02\u0163\u0164\t\f\x02\x02\u0164d\x03\x02\x02\x02\u0165" +
		"\u0166\t\r\x02\x02\u0166f\x03\x02\x02\x02\u0167\u0168\t\x04\x02\x02\u0168" +
		"h\x03\x02\x02\x02\u0169\u016A\t\x0E\x02\x02\u016Aj\x03\x02\x02\x02\u016B" +
		"\u016C\t\x0F\x02\x02\u016Cl\x03\x02\x02\x02\u016D\u016E\t\x10\x02\x02" +
		"\u016En\x03\x02\x02\x02\u016F\u0170\t\x11\x02\x02\u0170p\x03\x02\x02\x02" +
		"\u0171\u0172\t\x12\x02\x02\u0172r\x03\x02\x02\x02\u0173\u0174\t\x13\x02" +
		"\x02\u0174t\x03\x02\x02\x02\u0175\u0176\t\x14\x02\x02\u0176v\x03\x02\x02" +
		"\x02\u0177\u0178\t\x15\x02\x02\u0178x\x03\x02\x02\x02\u0179\u017A\t\x16" +
		"\x02\x02\u017Az\x03\x02\x02\x02\u017B\u017C\t\x17\x02\x02\u017C|\x03\x02" +
		"\x02\x02\u017D\u017E\t\x18\x02\x02\u017E~\x03\x02\x02\x02\u017F\u0180" +
		"\t\x19\x02\x02\u0180\x80\x03\x02\x02\x02\u0181\u0182\t\x1A\x02\x02\u0182" +
		"\x82\x03\x02\x02\x02\u0183\u0184\t\x1B\x02\x02\u0184\x84\x03\x02\x02\x02" +
		"\u0185\u0186\t\x1C\x02\x02\u0186\x86\x03\x02\x02\x02\u0187\u0188\t\x1D" +
		"\x02\x02\u0188\x88\x03\x02\x02\x02\u0189\u018A\t\x1E\x02\x02\u018A\x8A" +
		"\x03\x02\x02\x02\u018B\u018C\t\x1F\x02\x02\u018C\x8C\x03\x02\x02\x02\u018D" +
		"\u018E\t \x02\x02\u018E\x8E\x03\x02\x02\x02\u018F\u0190\t!\x02\x02\u0190" +
		"\x90\x03\x02\x02\x02\u0191\u0192\t\"\x02\x02\u0192\x92\x03\x02\x02\x02" +
		"\x18\x02\xEE\xF0\xF6\xFD\u0100\u0105\u010B\u010F\u0114\u0118\u011D\u0122" +
		"\u0124\u012D\u0135\u0137\u013E\u0143\u014A\u0154\u015B\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!NCalcLexer.__ATN) {
			NCalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(NCalcLexer._serializedATN));
		}

		return NCalcLexer.__ATN;
	}

}

